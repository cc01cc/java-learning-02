<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间：可以通过调用cn.edu.zjweu.spring.dao.BaseDao.addUser来调用addUser方法 -->
<mapper namespace="com.cc01cc.spring.mapper.BaseMapper">

	<!-- Buser findByIdAndPassword(Integer id, String password); -->
	<select id="findByIdAndPassword" parameterType="User" resultMap="userResultMap">

		select pk_user_id,
		user_password
		from user_account
		where
		pk_user_id=#{userId} and user_password=#{userPassword}

	</select>


	<insert id="saveUser" parameterType="User">

		insert into user_account(pk_user_id,user_password)
		value
		(#{userId},#{userPassword})

	</insert>


	<!-- int updatePassword(Integer id, String passwd); -->
	<!-- <update id="updatePasswordById" parameterType="Buser"> update busertable set bpwd=#{bpwd} where 
		id=#{id} </update> -->


	<!-- <update id="updatePasswordByEmail" parameterType="Buser"> update busertable set bpwd=#{bpwd} where 
		bemail=#{bemail} </update> -->


	<!-- Buser findByEmailAndPassword(String email, String password); -->
	<!-- <select id="findByEmailAndPassword" parameterType="Buser" resultType="Buser"> select id,bemail 
		from busertable where bemail=#{bemail} and bpwd=#{bpwd} </select> -->


	<!-- Buser findByEmail(String email); -->
	<!-- <select id="findByEmail" parameterType="String" resultType="Buser"> select bemail from busertable 
		where bemail=#{bemail} </select> -->

	<!-- 手动配置 resultMap 映射，id 为该映射标识符，type 为类(别名，使用@Alias) -->
	<!-- 手动配置返回值使用 resultMap 参数，而不是 resultType -->
	<resultMap type="com.cc01cc.spring.pojo.User" id="userResultMap">
	
		<!-- id 和 result 都创建映射，但 id 标记的属性可以作为对象的标识符，提高整体性能 -->
		
		<id property="userId" column="pk_user_id" jdbcType="INTEGER" />
		
		<result property="userPassword" column="user_password" jdbcType="VARCHAR" />
		
		<!-- 可以为空值的参数，必须指定 jabcType 值，避免 sql 表更改的麻烦，就所有映射添加 jdbcType -->
		<result property="userName" column="user_name" jdbcType="VARCHAR" />
		
	</resultMap>

	<select id="findById" parameterType="String" resultMap="userResultMap">

		select pk_user_id from user_account
		where pk_user_id=#{userId}

	</select>


	<!-- int deleteUser(Integer id, String password); -->
	<!-- <delete id="deleteUserById" parameterType="Buser"> delete from busertable where id=#{id} and bpwd=#{bpwd} 
		</delete> -->


	<!-- <delete id="deleteUserByEmail" parameterType="Buser"> delete from busertable where bemail=#{bemail} 
		and bpwd=#{bpwd} </delete> -->

</mapper>